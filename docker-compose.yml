version: '3.8'

services:
  quarkus-app:
    image: openjdk:17
    command: sh -c "cd /app && ./mvnw quarkus:dev"
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "8081:8081"
    networks:
      - my-network
    depends_on:
      - sonarqube
      - jenkins
      - postgres
      - prometheus
      - grafana

  sonarqube:
    image: sonarqube:latest
    ports:
      - "9000:9000"
    networks:
      - my-network
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
      - "50000:50000"
    networks:
      - my-network
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket to allowing the Jenkins container to communicate with the Docker daemon on the host machine.



  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: bws3
    ports:
      - "5432:5432"
    networks:
      - my-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks:
      - my-network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - my-network
    volumes:
      - grafana_data:/var/lib/grafana

networks:
  my-network:
    driver: bridge

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  jenkins_home:
  postgres_data:
  prometheus_config:
  grafana_data:
